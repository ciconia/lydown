grammar Lydown
  rule lines
    line ([\n] line)* <LydownNode>
  end
  rule line
    comment / setting / music <LydownNode>
  end
  rule comment
    '//' comment_content
  end
  rule comment_content
    [^\n]* <CommentContentNode>
  end
  rule setting
    '-' white_space* setting_key ':' setting_value comment?
  end
  rule setting_key
    [a-z0-9_]+ <SettingKeyNode>
  end
  rule setting_value
    (!"\n" !"//" .)* <SettingValueNode>
  end
  rule music
    event* comment?
  end
  rule white_space
    [ \t]+
  end
  rule event
    (duration / note / rest) white_space*
  end
  rule duration
    duration_value / duration_macro
  end
  rule duration_value
    number dots* multiplier? <DurationValueNode>
  end
  rule number
    [0-9]+
  end
  rule dots
    '.'+
  end
  rule multiplier
    '*' number ('/' number)*
  end
  rule duration_macro
    '{' duration_macro__expression '}'
  end
  rule duration_macro__expression
    macro_event* <DurationMacroExpressionNode>
  end
  rule macro_event
    (duration / note_placeholder / rest) white_space*
  end
  rule note_placeholder
    [_@]
  end
  rule note
    note_head octave* accidental_flag? <NoteNode>
  end
  rule rest
    [rR] multiplier* <RestNode>
  end
  rule note_head
    [a-g] accidental* <NoteNode::Head>
  end
  rule accidental
    [\+\-]+
  end
  rule octave
    [\,']+ <NoteNode::Octave>
  end
  rule accidental_flag
    [\!\?] <NoteNode::AccidentalFlag>
  end
end

