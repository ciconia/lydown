grammar Lydown
  include Lydown::Parsing

  rule lines
    line ([\n] line)* <Root>
  end
  rule line
    comment / setting / lyrics / music
  end
  rule comment
    '//' comment_content
  end
  rule comment_content
    [^\n]* <CommentContent>
  end
  rule setting
    '-' white_space* setting_key ':' setting_value comment? <Setting>
  end
  rule setting_key
    [a-z0-9_]+ <Setting::Key>
  end
  rule setting_value
    (!"\n" !"//" .)* <Setting::Value>
  end
  rule music
    white_space? event* comment?
  end
  rule white_space
    [ \t]+
  end
  rule event
    (duration / note / rest / phrasing / tie) white_space*
  end
  rule duration
    duration_value / duration_macro
  end
  rule duration_value
    number dots* multiplier? <DurationValue>
  end
  rule number
    [0-9]+
  end
  rule dots
    '.'+
  end
  rule multiplier
    '*' number ('/' number)*
  end
  rule duration_macro
    '{' duration_macro__expression '}'
  end
  rule duration_macro__expression
    macro_event* <DurationMacroExpression>
  end
  rule macro_event
    (duration / note_placeholder / rest / phrasing / tie) white_space*
  end
  rule note_placeholder
    [_@] expression*
  end
  rule note
    note_head octave* accidental_flag? expression* <Note>
  end
  rule expression
    (expression_shorthand / expression_longhand) <Note::Expression>
  end
  
  rule expression_shorthand
    [\_\.`]
  end
  rule expression_longhand
    '\\' [^\s\n]+
  end
  rule rest
    [rR] multiplier* <Rest>
  end
  rule note_head
    [a-g] accidental* <Note::Head>
  end
  rule accidental
    [\+\-]+
  end
  rule octave
    [\,']+ <Note::Octave>
  end
  rule accidental_flag
    [\!\?] <Note::AccidentalFlag>
  end
  rule phrasing
    beam_open / beam_close / slur_open / slur_close
  end
  rule beam_open
    [\[] white_space* <Phrasing::BeamOpen>
  end
  rule beam_close
    white_space* [\]] white_space* <Phrasing::BeamClose>
  end
  rule slur_open
    [\(] white_space* <Phrasing::SlurOpen>
  end
  rule slur_close
    white_space* [\)] white_space* <Phrasing::SlurClose>
  end
  rule tie
    regular_tie / short_tie
  end
  rule regular_tie
    '~' <Tie>
  end
  rule short_tie
    '&' <ShortTie>
  end
  rule lyrics
    '>' white_space* lyrics_content
  end
  rule lyrics_content
    (!"\n" !"//" .)* <Lyrics>
  end
end

