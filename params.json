{"name":"Lydown","tagline":"A language for music notation","body":"Lydown is a language and compiler for creating music scores, parts and snippets. The lydown code is compiled to [lilypond](http://lilypond.org/) code and then compiled to PDF, PNG or MIDI files.\r\n\r\n- [About](#)\r\n- [Installation](#)\r\n- [Hello world in lydown](#)\r\n- [Compiling the lydown code](#)\r\n- [Proofing mode](#)\r\n- [The lydown syntax](#)\r\n\t- [Notes and durations](#)\r\n\t- [Accidentals](#)\r\n\t- [Octaves](#)\r\n\t- [Barlines](#)\r\n\t- [Rests](#)\r\n\t- [Beams, slurs and ties](#)\r\n\t- [Articulation and expression marks](#)\r\n\t- [Repeated articulation and rhythmic patterns: macros](#)\r\n\t- [Named macros](#)\r\n\t- [Clefs, key and time signatures](#)\r\n\t- [Pickup bars](#)\r\n\t- [Lilypond Commands and inline settings](#)\r\n\t- [Inline lyrics](#)\r\n\t- [Stream switching](#)\r\n\t- [Figured bass](#)\r\n- [Multiple parts](#)\r\n- [Multiple movements](#)\r\n- [Multiple voices](#)\r\n\r\n## About\r\n\r\nLydown builds on the ideas put forth by lilypond and makes the following improvements:\r\n\r\n- a greatly simplified syntax for entering notes, for more rapid note entry and improved legibility.\r\n- ability to enter lyrics and bass figures interspersed with the music.\r\n- rhythmic macros for rapid entry of repeated rhythmic patterns.\r\n- zero lilypond boilerplate code.\r\n- a sane file/folder structure for creating multi-part, multi-movement works with automatic part extraction.\r\n\r\n## Installation\r\n\r\nBefore installing lydown, you'll need to have installed [lilypond](http://lilypond.org/download.html).\r\n\r\nYou can verify that lilypond is correctly installed by running the following command:\r\n\r\n    lilypond --version\r\n\r\nIf everything's ok, you can proceed by installing lydown:\r\n\r\n    gem install lydown\r\n\r\nand verifying that it too works:\r\n\r\n    lydown --version\r\n\r\n## Hello world in lydown\r\n\r\n    // helloworld.lydown\r\n    - key: d major\r\n    - time: 2/4\r\n    4d\\\"Hello world!\" 6c#bag 3f#gag6f#d 4e\r\n\r\nAnd here's the equivalent lilypond code:\r\n\r\n    \\version \"2.18.2\"\r\n    relative c' {\r\n      \\key d major\r\n      \\time 2/4\r\n       d'4\\\"Hello world!\" cs16 b a g fs32 g a g fs16 d e4\r\n    }\r\n\r\n## Compiling the lydown code\r\n\r\nThe lydown command line tool can compile the code into lilypond code, PDF, PNG, or MIDI. The program creates an output file with the same name as the input file and the corresponding extension. Specifiying the -O switch causes the output to be opened immediately.\r\n\r\nTo create a lilypond file:\r\n\r\n    lydown -O --ly helloworld.lydown\r\n\r\nTo create a PDF file:\r\n\r\n    lydown -O --pdf helloworld.lydown\r\n\r\nTo create a PNG file:\r\n\r\n    lydown -O --png helloworld.lydown\r\n\r\nTo create a MIDI file:\r\n\r\n    lydown -O --midi helloworld.lydown\r\n\r\n\r\n## Proofing mode\r\n\r\nLydown can be run in a special proofing mode designed to minimize the turnaround time between editing and viewing the result when entering new music or when editing existing music. To run lydown in proofing mode, use the proof subcommand:\r\n\r\n    lydown proof\r\n  \r\nLydown will then start to monitor all subdirectories and files in the current directory, and compile them whenever they're changed. Lydown will detect the lines that have changed and insert skip markers in order to speed up compilation and typeset only the music that has actually changed. In addition, notes in the bars that changed will be colored red.\r\n\r\nIn proof mode, lydown will generate parts and not a score. To include another part for reference along with the part that changed, you can use the include_parts parameter:\r\n\r\n    lydown proof --include_parts continuo # or:\r\n    lydown proof -i continuo\r\n\r\nThis is useful when editing baroque music for example, or when any other part can give context and aid in verifying the music.\r\n\r\n## The lydown syntax\r\n\r\nThe lydown syntax is designed for faster note entry, better legibility and minimal boilerplate. The lydown syntax takes the basic ideas put forth by lilypond and simplifies them, with the following main differences:\r\n\r\n- musical context (staves, parts, etc) is implicit rather than explicit.\r\n- whitespace between notes is optional.\r\n- durations come before notes.\r\n- duration macros allow rapid entry of repeated rhythmic patterns (such as dotted rhythm).\r\n\r\nIt must be stressed that lydown is made to process music that is relatively simple, and it was designed to support the processing of baroque music in particular. Therefore, a lot of stuff that is possible with plain lilypond would not be possible with lydown.\r\n\r\nFor the sake of this tutorial, some familiarity with the concepts and syntax of lilypond is presumed. The lydown code will be shown alongside its lilypond equivalent.\r\n\r\n### Notes and durations\r\n\r\nIn lydown, durations are entered before the note to which they refer, and they stay valid for subsequent notes, until a new value is entered:\r\n\r\n    4c8de2f => c4 d8 e f2\r\n\r\nIn addition to the usual values (1, 2, 4, 8, 16, 32 etc), lydown adds two shortcuts for commonly used values: 6 for 16th notes and 3 for 32th notes:\r\n\r\n    8c6de3fefefede2f => c8 d16 e f32 e f e f e d e f2\r\n\r\nAugmentation dots are entered like in lilypond:\r\n\r\n    8.c6d 8.e6f 2g => c8. d16 e8. f16 g2\r\n    8..g 3g 4c => g8.. g32 c4\r\n    \r\nNotes can be repeated using the <code>@</code> placeholder:\r\n\r\n    4c@@@ => c4 c c c\r\n\r\n(The repeating note placeholder is useful when entering repeated notes with accidentals).\r\n\r\nChords are written using angled brackets, like in lilypond:\r\n\r\n    (2<fd>4<ge>) => <f d>2( <g e>4)\r\n    \r\n### Accidentals\r\n\r\nAccidentals can be entered using + and -\r\n\r\n    8cgb-c2a => c8 g bes c a2\r\n\r\nBut can also be entered using the characters # for sharp, ß for flat and h for natural:\r\n\r\n    c#dßeh => cis des e\r\n\r\nIn lydown notes follow the key signature by default:\r\n\r\n    - key: g major\r\n    ff#fhfßd#bß => fis fisis f f dis bes\r\n\r\nThe accidental mode can be changed by specifiying the manual accidental mode:\r\n\r\n    - key: g major\r\n    - accidentals: manual\r\n    8g6f+edcba2g\r\n\r\nIn the default, automatic mode, when deviating from the key signature the accidental must be repeated for each note, regardless of barlines.\r\n\r\nIn the [same manner as lilypond](http://www.lilypond.org/doc/v2.18/Documentation/notation/writing-pitches#accidentals), accidentals can be forced by following the note name and accidental with a ! (for a reminder), or ? (for a cautionary accidental in parentheses):\r\n\r\n      cc+c+!cc? => c cs cs! c c?\r\n\r\nA ficta accidental (an non-original accidental that appears above the staff) can be entered using the ^ symbol after the accidental:\r\n\r\n      cdef+^g\r\n\r\n### Octaves\r\n\r\nIn Lydown, the first note in the document carries an absolute octave marker, using the <code>'</code> and <code>,</code> signs:\r\n\r\n      c,,   // contrabass octave\r\n      c,    // great octave\r\n      c     // small octave\r\n      c'    // first octave (middle c)\r\n      c''   // second octave\r\n      c'''  // third octave\r\n      ...   // etc.\r\n\r\nFor the following notes, the octave markers <code>'</code> and <code>,</code> are used for jumping between octaves, using the same rules as \r\n lilypond's [relative mode](http://www.lilypond.org/doc/v2.18/Documentation/notation/writing-pitches#relative-octave-entry):\r\n\r\n### Barlines\r\n\r\nJust like in lilypond, barlines are taken care of automatically according to the time signature. Final bar lines and repeat bar lines can be entered explicitly by using shorthand syntax:\r\n\r\n    |: cege :|: cfaf :|\r\n\r\nWhen entering unmetered music, an invisible barline can be added in order to provide line breaks:\r\n\r\n    -time: unmetered\r\n    cdef ?| gag\r\n\r\n### Rests\r\n\r\nNormal rests are written [like in lilypond](http://www.lilypond.org/doc/v2.18/Documentation/notation/writing-rests#rests):\r\n\r\n    4ce2r => c4 e r2\r\n\r\nFull bar rests are [similar to lilypond](http://www.lilypond.org/doc/v2.18/Documentation/notation/writing-rests#full-measure-rests), except there's no need to enter the rest value (it is implicit in the time signature):\r\n\r\n    - time: 3/4\r\n    // 4 bar rest in the middle\r\n    2c4e R*4 2.g\r\n\r\n### Beams, slurs and ties\r\n\r\nLydown uses automatic beaming as the default, except in the case of vocal parts (see [document settings](#settings)). Auto beaming can be\r\n\r\nBeaming and sluring is similar to lilypond, except the beam/slur start comes before the note:\r\n\r\n    8(cdef)g[6fe]4f => c8( d e f) g f16[ e] f4\r\n\r\na regular tie is written just like in lilypond:\r\n\r\n    4g~6gfed2c => g4 ~ g16 f e d c2\r\n\r\nLydown also supports a shortened tie form, where the tied note is not repeated:\r\n\r\n    4g6&fed2c => g4 ~ g16 f e d c2\r\n\r\n### Articulation and expression marks\r\n\r\nLilypond [shorthand articulation marks](http://www.lilypond.org/doc/v2.18/Documentation/notation/expressive-marks-attached-to-notes#articulations-and-ornamentations) can be entered after a backslash\r\n\r\n    c\\^ e\\+ g\\_ => c-^ e-+ g-_\r\n\r\nCommon articulation marks can be entered immediately after the note:\r\n\r\n    // tenuto, staccato, staccatissimo\r\n    c_e.g` => c-- e-. g-!\r\n\r\nOther arbitrary lilypond articulations can be entered after a backslash:\r\n\r\n    c\\staccato e\\mordent g\\turn => c\\staccato e\\mordent g\\turn\r\n\r\n[Dynamic marks](http://www.lilypond.org/doc/v2.18/Documentation/notation/expressive-marks-attached-to-notes#dynamics) are entered before the note to which they apply:\r\n\r\n    c\\f eg\r\n\r\n    \\f cege \\p cfaf => c\\f e g e c\\p f a f\r\n\r\nArbitrary expression markup can be entered as a string following a backslash. Lydown supports basic markdown syntax for formatting the expression:\r\n\r\n    c\\\"hello\" // displayed above the note\r\n    c\\_\"hello\" // displayed below the note\r\n    c\\<\"hello\" // right-aligned\r\n    c\\|\"hello\" // centered\r\n    c\\_|\"hello\" // centered, below the note\r\n    c\\\"_hello_\" // italic\r\n    c\\\"__hello__\" // bold\r\n\r\n### Repeated articulation and rhythmic patterns: macros\r\n\r\nAn important feature of lydown is the macro, which facilitates rapid entry of repeated rhythmic and articulative patterns.\r\n\r\nA common scenario is repeated articulation, for example a sequence of staccato notes:\r\n\r\n    {.}cdefgabc => c-. d-. e-. f-. g-. a-. b-. c-.\r\n\r\nA macro can also contain a fully qualified lilypond articulation specifier:\r\n\r\n    {\\tenuto}cege => c\\tenuto e\\tenuto g\\tenuto e\\tenuto\r\n\r\nRhythmic macros can be used for repeated rhythmic patterns. A common scenario is a dotted rhythm:\r\n\r\n    // The _ symbol denotes a note placeholder\r\n    {8._6_}cdefgfed => c8. d16 e8. f16 g8. f16 e8. d16\r\n\r\nA repeating diminution may also be expressed succintly:\r\n\r\n    // The @ symbol denotes a repeated pitch\r\n    {16_@@@}cfgf => c16 c c c f f f f g g g g f f f f\r\n\r\nA macro can include both durations and articulation marks:\r\n\r\n    {4_~6@(_._._.)}cdefgfed => c4 ~ c16 d-.( e-. f-.) g4 ~ g16 f-.( e-. d-.)\r\n\r\nA macro containing durations will remain valid until another duration or duration macro is encountered. A macro containing articulation only will be valid until another duration, macro or empty macro is encountered:\r\n\r\n    6{.}gg{}aa => g16-. g-. a a\r\n\r\n### Named macros\r\n\r\nMacros can be defined with a name and reused:\r\n\r\n    - macros:\r\n      - dotted: 8._6_\r\n    {dotted}gaba2g{dotted}abcb2a => g8. a16 b8. a16 g2 a8. b16 c8. b16 a2\r\n\r\n### Clefs, key and time signatures\r\n\r\nClefs are determined automatically by lydown based on the specified part. In case no part is specified, the default clef is a treble clef. The clef values are the same as in [lilypond](http://www.lilypond.org/doc/v2.18/Documentation/notation/displaying-pitches#clef). The clef can be changed at any time with a clef setting:\r\n\r\n    - clef: bass\r\n    8cdefgabc\r\n    - clef: tenor\r\n    defedcbd\r\n    - clef: bass\r\n    1c\r\n\r\nKey and time signatures are entered inline as document settings ([see below](#settings)). The [key](http://www.lilypond.org/doc/v2.18/Documentation/notation/displaying-pitches#key-signature) and [time](http://www.lilypond.org/doc/v2.18/Documentation/notation/displaying-rhythms#time-signature) values follow the lilypond syntax:\r\n\r\n    - key: d major\r\n    - time: 3/4\r\n\r\nIn the case of key signatures, accidentals will follow the lydown syntax:\r\n\r\n    - key: b- major\r\n    - key: f+ minor\r\n    \r\nKey signatures can also be specified using shorthand notation (upper case for major, lower case for minor):\r\n\r\n    - key: B- // b flat major\r\n    - key: f+ // f sharp minor\r\n\r\nThe default key signature is C major, and the default time signature is 4/4.\r\n\r\nKey or time signatures can be changed on the fly:\r\n\r\n    - time: 4/4\r\n    4c e g b\r\n    - time: 3/4\r\n    c e g 2.c\r\n    \r\n### Pickup bars\r\n\r\n[Pickup bars](http://www.lilypond.org/doc/v2.18/Documentation/notation/displaying-rhythms#upbeats) (anacrusis, upbeat) are defined with the pickup setting:\r\n\r\n    - time: 3/4\r\n    - pickup: 4\r\n        4g\r\n    c8cdcb4aaa\r\n    d8dedc4bb\r\n\r\n### Lilypond Commands and inline settings\r\n\r\nLilypond commands and settings can be entered inline as part of the note stream:\r\n\r\n  cd \\key:E- e \\stemDown f\r\n  \r\nA useful shorthand is for one-time (<code>\\once</code>) overrides, with an exclamation mark between the backslash and the command:\r\n\r\n  \\!override:\"NoteHead.color = #red\"\r\n\r\nMultiple arguments can be given, separated by colons. Arguments need to be quoted only if they contain whitespace, or colons:\r\n\r\n  \\!override:AccidentalSuggestion:\"#'avoid-slur = #'outside\"\r\n\r\nSome lilypond command arguments are expected to be quoted. Quotes can be escaped by prefixing them with a backslash:\r\n\r\n  \\footnote:\"#'(-1 . 1)\":\"\\\"slurred?\\\"\"\r\n\r\n### Inline lyrics\r\n\r\nLyrics for vocal parts can be entered on separate lines prefixed by a > symbol:\r\n\r\n    4c[8de]4fd(4c[8de]2f)\r\n    > Ly-down is the bomb__\r\n\r\nOr between notes using quotes:\r\n\r\n    4c[8de]4fd(4c[8de]2f) >\"Ly-down is the bomb__\"\r\n\r\nText alignment follows the duration, beaming and slurring of the music, [just like in lilypond](http://www.lilypond.org/doc/v2.18/Documentation/notation/common-notation-for-vocal-music#automatic-syllable-durations). Sillables are expected to be separated by a dash. Melismas, i.e. a single sillable streched over multiple notes, is signified by one or more underscores.\r\n\r\nMultiple stanzas for the same music can be specified by including the stanza number in parens:\r\n\r\n    4cege1c\r\n    > Ly-down is the bomb.\r\n    >(2) Li-ly-pond is too.\r\n\r\n### Stream switching\r\n\r\nLyrics can be entered in a block, before or after musical notation, by switching streams:\r\n\r\n    8ccg'gaa4g\r\n    8ffeedd4c\r\n    =lyrics\r\n    Twin-kle twin-kle lit-tle star,\r\n    How I won-der what you are.\r\n    =music\r\n    8g'gffeed4\r\n    ...\r\n    \r\nMultiple lyrics stanzas can be written by including the stanza number in parens:\r\n\r\n    =lyrics(1) // optional, same as =lyrics\r\n    ...\r\n    =lyrics(2)\r\n    ...\r\n\r\n### Figured bass\r\n\r\nFigured bass is entered inline, following notes or even between notes, when\r\nmultiple figures align with a single note.\r\n\r\n    c<6>de<5>c // figures are automatically rhythmically aligned \r\n    e<7`> // barred figure\r\n    f<6+> // sharp 6th\r\n    g<6-> // flat 6th\r\n    g<6!> // natural sixth\r\n    a<h> // natural third\r\n    a<#> // sharp third\r\n    a<b> // flat third\r\n    b<7#>b<6_> // extender (tenue) line on sharp third\r\n    1c2<6><7-> // use durations to change figures over a long note\r\n    1c2<><7-> // <> is an empty figure\r\n    c<->dec<.> // extender (tenue) line without figures over the four notes\r\n\r\n## Multiple parts\r\n\r\nMultiple parts can be entered in the same file by prefixing each part's content with a -part setting:\r\n\r\n    - part: violino1\r\n    8c'cg'gaa4g\r\n    - part: continuo\r\n    4cefe\r\n\r\n## Multiple movements\r\n\r\nFor multi-movement works, prefix each movement with a -movement setting:\r\n\r\n    - movement: Adagio\r\n    ...\r\n    - movement: Allegro\r\n    ...\r\n\r\n## Multiple voices\r\n\r\n[Multiple voices](http://www.lilypond.org/doc/v2.18/Documentation/notation/multiple-voices#single_002dstaff-polyphony) on the same staff can be easily entered using the following notation:\r\n\r\n    1: 8egfdeg4f 2: 4cded u: ...\r\n    \r\nthe <code>u:<\\code> command is used to return to single voice (_unisono_) mode.\r\n  \r\nLyrics can be added for individual voices by using inline lyrics:\r\n\r\n    1: ceg >\"yeah yeah yeah\" 2: gbd >\"no no no\" u: ...\r\n\r\n## Piano scores\r\n\r\n[Piano/keyboard scores](http://www.lilypond.org/doc/v2.18/Documentation/notation/common-notation-for-keyboards) can be created by using the <code>r/l</code> (right/left) prefixes:\r\n\r\n    r: 8cdeccdec\r\n    l: 4cgcg\r\n\r\nIn order to jump between staves, you can use the special commands <code>\\r, \\l</code>\r\n\r\n    r: 8<e'c'> \\l g,f+g \\r <g'' c'> \\l e,,d+e \\r\r\n    l: 1s\r\n\r\n## multi-part scores and part extraction\r\n\r\nAs the example above shows, lydown supports multiple parts in the same file, but parts can also be written in separate files. This is useful for long pieces or those with a large number of parts.\r\n\r\nFor this we create a main file which defines the score structure:\r\n\r\n// score.lydown\r\n- score:\r\n   - [violino1, violino2]\r\n   - viola\r\n   - violoncello\r\n- time: 4/4\r\n- key: c major\r\n\r\nThen we enter the music in a separate file for each part:\r\n\r\n// violino1.lydown\r\n8c''cg'gaa4g 8ffeedd4c\r\n\r\nAnd so forth.\r\n\r\nTo compile the score, we use the following command:\r\n\r\nlydown -o -s score.lydown\r\n\r\nTo extract a specific part, we use the -p  switch:\r\n\r\nlydown -o -p violino1 score.lydown\r\n\r\n## Colla parte and part sources\r\n\r\nlydown provides two ways to reuse a part's music in another part. The first is by defining a part source:\r\n\r\n    - parts:\r\n      - violino1:\r\n        - source: soprano\r\n\r\nWhen dealing situations such as a choral being doubled by many instruments, a more convenient approach would be the <code>colla_parte</code> setting:\r\n\r\n    - colla_parte:\r\n      - soprano: violino1, flute1, flute2, oboe1\r\n      - alto: violino2, oboe2\r\n      - tenor: viola, gamba1\r\n      - basso: gamba2\r\n\r\nIt is important to remember that the <code>colla_parte</code> setting is the opposite of the part source. Instead of defining a source for a part, it defines the parts that follow the source part.\r\n\r\n## Including another part when extracting parts\r\n\r\nWhen extracing parts, some cases, such as recitatives, require displaying another part together with the part to be extracted. Parts can be included in extracted parts using the <code>include_parts</code> setting:\r\n\r\n    - parts:\r\n      - continuo:\r\n        - include_parts: tenore\r\n        \r\nmultiple parts can be specified by comma separating them.\r\n\r\n## Mode specific code\r\n\r\nThe <code>\\mode</code> and <code>\\nomode</code> commands can be used to render code for specific modes. This can be useful when the extracted part should display a different music than the score. The mode command causes anything after it to be rendered only when the rendering mode matches the specified mode.\r\n\r\n    \\mode:score 4cege \\mode:part 4cded \\mode:none 1c\r\n    \r\nThe example above will be render as <code>4cege1c</code> when in score mode, and as <code>4cded1c</code> in the extracted part.\r\n\r\nTo cancel a mode, use either <code>\\mode:none</code> or <code>\\nomode</code>\r\n\r\n## Staff and system appearance\r\n\r\nNumerous settings can be used to control the way staves and systems are displayed. Normally, lydown will follow standard conventions when putting together a score: the different parts will be ordered correctly (e.g. flutes, then oboes, then strings, then vocal parts, then continuo), and braced/bracketed according to convention.\r\n\r\nWhen a single movement switches between different ensembles, for example a recitativo secco followed by a recitativo accompagnato, empty staves may be hidden using setting <code>empty_staves</code> setting:\r\n\r\n    - empty_staves: hide\r\n    \r\nNormally, instrument names are shown according to convention, to the left of each staff in the first system. To hide the instrument names on the first system, use the <code>instrument_names</code> setting:\r\n\r\n    - instrument_names: hide\r\n    \r\nThe <code>instrument_names</code> setting can also be set to <inline>, in which case the instrument name will be displayed above the beginning of each staff in the first system.\r\n  \r\nTo show the instrument name inline at any point in the music, use the <code>\\instr</code> command:\r\n\r\n    - part: flute\r\n    R*4\r\n    // when no parameter is given, the part name is used, \r\n    // and engraved capitalized with numbers formatted to roman numerals\r\n    \\instr 4c8eg2c\r\n    ...\r\n    // when the instrument name is specifed, it is used in place of the \r\n    // part name:\r\n    \\instr:\"Flute II\" 4c8eg2c\r\n    \r\nThe <code>\\instr</code> command can also accept an alignment modifier:\r\n\r\n    \\<instr // right-aligned\r\n    \\>instr // left-aligned (default)\r\n    \\|instr // centered\r\n\r\nAnother setting which controls the display of instrument names is <code>instrument_name_style</code> which can be set to <code>normal</code> or <code>smallcaps</code>, in which case the instrument name will be engraved using small caps.\r\n\r\n## Rendering MIDI && mp3 files\r\n\r\nIn order to render the source code into MIDI, the midi format should be specified:\r\n\r\n    lydown --midi score.ld\r\n    \r\nThe playback tempo can be specified either using the <code>midi_tempo</code> setting:\r\n\r\n    - midi_tempo: 4=96\r\n    \r\nOr inline using the <code>tempo</code> command, putting the tempo in parens:\r\n\r\n    \\tempo:(4=120)\r\n    cdef\r\n    /tempo:(4=54)\r\n    gabc\r\n\r\nRendering of mp3 files requires both [timidity](http://timidity.sourceforge.net/) and [LAME](http://lame.sourceforge.net/) to be installed. The mp3 format needs to be \r\n\r\n## Adding a front cover\r\n\r\nWhen creating professional scores and parts, it is customary to add a cover page, with the title of the piece, the composer's name and other general information.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}